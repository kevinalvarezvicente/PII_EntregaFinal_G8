<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LibraryTests</name>
    </assembly>
    <members>
        <member name="T:LibraryTests.BoardAndShipTests">
            <summary>
            Se hace test para el método que divide la coordenada
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.TestReceiveShotException">
            <summary>
            Se testea el disparo dos veces a la misma coordenada. Se testea excepcion
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.TestMaxShipQuantity">
            <summary>
            Se testea la maxima cantidad de barcos 
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.AddFrigateToBoardVertical">
            <summary>
            Se testea agregar un LightCruiser en vertical
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.AddFrigateToBoardHorizontal">
            <summary>
            Se testea agregar un Frigate en horizontal
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.AddAllPositionsOfFrigate">
            <summary>
            Testea que se agreguen 2 posiciones de Frigate
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.AddLightCruiserToBoardVertical">
            <summary>
            Se testea agregar un LightCruiser en vertical
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.AddLightCruiserToBoardHorizontal">
            <summary>
            Se testea agregar un LightCruiser en horizontal
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.AddAllPositionsOfLightCruiser">
            <summary>
            Se testea que se agreguen las 3 posiciones de LightCruiser
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.AddSubmarineToBoardVertical">
            <summary>
            Se testea agregar un Submarino en vertical
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.AddSubmarineToBoardHorizontal">
            <summary>
            Se testea agregar un Submarino en horizontal
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.AddAllPositionsOfSubmarine">
            <summary>
            Se testea que se agreguen las 4 posiciones del submarino
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.PlayerReceivesShotTest">
            <summary>
            Se testea cuando un jugador recibe un shot 
            Se testea que el barco que se agregó se agrega a la lista de barcos del jugador
            Se testea que al recibir el shot cambie el valor de la coordenada del barco
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.PlayerShipSinkedTest">
            <summary>
            Test sin funcionar aún 
            </summary>    
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.TestVulnerableCoord">
            <summary>
            Testea que si se dispara a la coordenada vulnerable de cualquier barco se hunde.
            Testea que al jugador se le hundieron todos sus barcos
            </summary>  
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.TestPlayerShipsList">
            <summary>
            Testea que cuando se agregan barcos a la lista de barcos del jugador
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.TestPlayerAddingManyShipsList">
            <summary>
            Testea que cuando se agregan barcos al tablero del jugador con el metodo PlaceShipOnBoard
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.TestMakeShot">
            <summary>
            El test prueba el método MakeShot del jugador, este método hace que el jugador realiza el disparo y ubica una "x" en su tablero de tiros
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.TestBigBoardException">
            <summary>
            Testea excepcion del tamaño del tablero
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.TestSmallBoardException">
            <summary>
            Testea excepcion de que el tamaño del tablero se elige 0
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.TestPlaceSubmarineInTakenPosition">
            <summary>
            Testea si la coordenada elegida para ubicar el fragata ya tiene un barco ubicado
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.TestPlaceFrigateInTakenPosition">
            <summary>
            Testea si la coordenada elegida para ubicar el submarino ya tiene un barco ubicado
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.TestPlaceCruiserInTakenPosition">
            <summary>
            Testea si la coordenada elegida para ubicar el crucero ya tiene un barco ubicado
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.TestPlaceShipOutOfBoard">
            <summary>
            Testea que no se pueda ubicar ningun tipo de barco si una coordenada queda fuera del tablero lanzando una excepcion
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.TestSearchForCoordInShipsListOK">
            <summary>
            Testea que busca la coordenada en la lista de barcos de cada jugador. Si esta la coordenada en la lista de barcos es porque el jugador tiene un barco ubicado ahi.
            Se hace Assert.AreEqual para una coordenada que si esta
            </summary>
        </member>
        <member name="M:LibraryTests.BoardAndShipTests.TestSearchForCoordInShipsListNotOK">
            <summary>
            Testea que busca la coordenada en la lista de barcos de cada jugador. Si esta la coordenada en la lista de barcos es porque el jugador tiene un barco ubicado ahi.
            Se hace Assert.AreEqual para una coordenada que no esta
            </summary>
        </member>
        <member name="T:LibraryTests.ContainerTests">
            <summary>
            Se testean los métodos de Lobby y Administrator. Se hacen juntos ya que son clases Singleton
            IMPORTANTE: Para correr cada uno se debe descomentar, pues dado que es un singleton, al agregar usuarios a la lista se mentienen alli
            </summary>
        </member>
        <member name="M:LibraryTests.ContainerTests.TestAddUserToLobby">
            <summary>
            Se realiza Test1
            </summary>
        </member>
        <member name="M:LibraryTests.ContainerTests.TestRemoveUserFromLobby">
            <summary>
            Test2
            </summary>
        </member>
        <member name="T:LibraryTests.UserPlayerTests">
            <summary>
            Se hace test para los métodos de la clase Utilidades
            </summary>
        </member>
        <member name="M:LibraryTests.UserPlayerTests.TestCurrentID">
            <summary>
            Se testea el ID al registrar un nuevo usuario, dado que en otros tests tambien se registro usuarios esta sería la numero 23 y 24
            </summary>
        </member>
        <member name="M:LibraryTests.UserPlayerTests.TestCurrentIDAgain">
            <summary>
            Se testea el ID al registrar un nuevo usuario denuevo chequeando que funciona, dado que en otros tests tambien se registro usuarios esta sería la numero 25
            </summary>
        </member>
        <member name="T:LibraryTests.UtilsTests">
            <summary>
            Se hace test para los métodos de la clase Utilidades
            </summary>
        </member>
        <member name="M:LibraryTests.UtilsTests.TestSplitCoordIntoRowAndColumnOK">
            <summary>
            Test 15
            Primer test probando con una coordenada
            </summary>
        </member>
        <member name="M:LibraryTests.UtilsTests.TestSplitCoordIntoRowAndColumnNotOK3">
            <summary>
            Test 16
            Este test chequearía que si se manda una coordenada mas larga que 2 entonces salta error
            Hay que hacerle test porque aun no sabemos hacerlo con excpeciones
            </summary>
        </member>
        <member name="M:LibraryTests.UtilsTests.TestSplitCoordIntoRowAndColumnNotOK1">
            <summary>
            Test17
            Este test chequearía que si se manda una coordenada menor que 2 entonces salta error
            Hay que hacerle test porque aun no sabemos hacerlo con excpeciones
            </summary>
        </member>
    </members>
</doc>
